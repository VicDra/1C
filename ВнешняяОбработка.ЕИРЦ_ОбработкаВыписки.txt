Функция ПолучитьКонтрагентаПоСчету(РасчетныйСчет)
	Запрос = Новый Запрос;
	Запрос.Текст = " ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Счета.Владелец КАК Владелец
		|ИЗ
		|	Справочник.БанковскиеСчета КАК Счета
		|ГДЕ
		|	Счета.НомерСчета = &НомерСчета
		|	И Счета.ПометкаУдаления = &ПометкаУдаления
		|	И Счета.Владелец.ПометкаУдаления = &ПометкаУдаления";
	
	Запрос.УстановитьПараметр("НомерСчета", РасчетныйСчет);
	Запрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ЭлементРезультата из Результат Цикл
		Сообщить("Расчетный счет "+РасчетныйСчет);
		Сообщить(ЭлементРезультата.Владелец);
		Возврат  ЭлементРезультата.Владелец;
	КонецЦикла;
	
	Возврат   Справочники.Контрагенты.ПустаяСсылка();
КонецФункции

Функция ЭтоМурино(Назначение)
	Если (
		Найти(ВРег(Назначение),"МУРИНО") > 0 ИЛИ 
		Найти(ВРег(Назначение),"БУГРЫ") >0 ИЛИ
		Найти(ВРег(Назначение),"КАПИТОЛОВО") > 0 ИЛИ 
		Найти(ВРег(Назначение),"ЭНКОЛОВО") >0 ИЛИ
		Найти(ВРег(Назначение),"МИСТОЛОВО") > 0 ИЛИ 
		Найти(ВРег(Назначение),"ЛАВРИКИ") >0 ИЛИ
		Найти(ВРег(Назначение),"ДЕВЯТКИНО") > 0 ИЛИ 
		Найти(ВРег(Назначение),"ПОРОШКИНО") >0
		) 
	Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции
	
Функция ПолучитьДоговорПоДокументу(ДокументОснование,ДатаНачалаПериода)
	Запрос = Новый Запрос;
	Запрос.Текст = " ВЫБРАТЬ ДоговорПолучателяДС
	 	|	Из Документ.ЕИРЦ_Моментум_ДокументыПеречислений  КАК ДП
		|ГДЕ
		|	ДП.ПлатежноеПоручение = &Основание
		|	И ДП.ПометкаУдаления = &ПометкаУдаления
		|	И ДП.Проведен = &Проведен";
//		|	И ДП.Дата>= &Дата";
	
	Запрос.УстановитьПараметр("Основание", ДокументОснование);
	Запрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
	Запрос.УстановитьПараметр("Проведен" , Истина);
	Запрос.УстановитьПараметр("Дата" , ДатаНачалаПериода);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ЭлементРезультата из Результат Цикл
		Возврат  ЭлементРезультата.ДоговорПолучателяДС;
	КонецЦикла;
	
	Возврат   Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура Обработать(Команда)
	// Вставить содержимое обработчика.
	Если Поступления Тогда
		ОбработатьПоступления(Организация, БанковскийСчет , Объект.ДатаНачалаПериода, Объект.ДатаОкончанияПериода);
	КонецЕсли;
	
	Если Списания Тогда
		ОбработатьСписания(Организация, БанковскийСчет , Объект.ДатаНачалаПериода, Объект.ДатаОкончанияПериода);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьПоступления(Организация, БанковскийСчет, ДатаНачалаПериода, ДатаОкончанияПериода)
	
	// ------------------------------------------- //
	ШаблоныЗапрос = Новый Запрос;
	ШаблоныЗапрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	| ЕИРЦ_Автоматика_РасчетногоСчета.Контрагент.Ссылка КАК Контрагент,
	| ЕИРЦ_Автоматика_РасчетногоСчета.Договор.Ссылка КАК Договор,
	| ЕИРЦ_Автоматика_РасчетногоСчета.Счет_расчетов.Ссылка КАК Счет_расчетов,
	| ЕИРЦ_Автоматика_РасчетногоСчета.Вид_Операции.Ссылка КАК Вид_Операции,
	| ЕИРЦ_Автоматика_РасчетногоСчета.СтатьяДДС.Ссылка КАК СтатьяДДС,
	| ЕИРЦ_Автоматика_РасчетногоСчета.НазначенияПлатежа.(
	| 	Шаблон КАК Шаблон
	| ) КАК НазначенияПлатежа
	| ИЗ
	| Справочник.ЕИРЦ_Автоматика_РасчетногоСчета КАК ЕИРЦ_Автоматика_РасчетногоСчета";
	Шаблоны = ШаблоныЗапрос.Выполнить().Выгрузить();
	// ------------------------------------------- //
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("КонецПериода" , ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
	
	Если ОбработкаПроведенных Тогда
		Запрос.УстановитьПараметр("Проведен" , Истина);
	Иначе
		Запрос.УстановитьПараметр("Проведен" , Ложь);
	КонецЕсли;

	Запрос.УстановитьПараметр("Организация" , Организация);
	Запрос.УстановитьПараметр("БанковскийСчет" , БанковскийСчет.Ссылка);
	Запрос.Текст = "
	| ВЫБРАТЬ  РАЗРЕШЕННЫЕ ПоступлениеНаРасчетныйСчет.Ссылка КАК Ссылка
	| ИЗ Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
	| ГДЕ
	| ПоступлениеНаРасчетныйСчет.Дата >= &НачалоПериода
	| И ПоступлениеНаРасчетныйСчет.Дата <= &КонецПериода
	| И ПоступлениеНаРасчетныйСчет.ПометкаУдаления = &ПометкаУдаления
	| И ПоступлениеНаРасчетныйСчет.СчетОрганизации.Ссылка = &БанковскийСчет
	| И ПоступлениеНаРасчетныйСчет.Проведен = &Проведен
	| И ПоступлениеНаРасчетныйСчет.Организация    = &Организация";
	
	Результат = Запрос.Выполнить().Выгрузить();
	// ------------------------------------------- //	
	
	СчетРасчетов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09");
	СчетПусто 	 = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	СтатьяДДС 	 = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	КонтрагентНаселение = Справочники.Контрагенты.НайтиПоНаименованию("Население (платежные поручения)");
	ВладелецВсеволожска = Справочники.Организации.НайтиПоНаименованию("ТУ_Всеволожский р-н");
	
	
	Для Каждого ЭлементРезультата из Результат Цикл
		Перепровести = Ложь;
		ДокументОбъект 	= ЭлементРезультата.Ссылка.ПолучитьОбъект();
		ДокументСсылка =  ЭлементРезультата.Ссылка;
		
		Если Найти(ДокументОбъект.Комментарий, "#") > 0 Тогда
   			Сообщить("Пропуск обработанного. Документ №"+ДокументОбъект.Номер+". Контрагент :="+ДокументОбъект.Контрагент);
			Продолжить;
		КонецЕсли;	
		
		Сообщить("Обработка. Документ №"+ДокументОбъект.Номер+". Контрагент :="+ДокументОбъект.Контрагент);
		
		Если ЗначениеЗаполнено(ДокументОбъект.Контрагент) Тогда
			Если ДокументОбъект.Контрагент.ИНН = "7724261610" Тогда
				Сообщить("Обработка. Перевычисление контрагента, т.к. поступил старый ИНН ПОЧТЫ РОССИИ");
				ДокументОбъект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;			
		КонецЕсли;

		
		Если Не ЗначениеЗаполнено(ДокументОбъект.Контрагент) Тогда
			Для Каждого Реквизит из ДокументОбъект.РеквизитыКонтрагента Цикл
				Если Реквизит.Реквизит = "РасчСчет" Тогда
					ДокументОбъект.Контрагент = ПолучитьКонтрагентаПоСчету(Реквизит.Значение);
				КонецЕсли;	
			КонецЦикла;
			
			Если Не ЗначениеЗаполнено(ДокументОбъект.Контрагент) Тогда
		        ДокументОбъект.Контрагент = КонтрагентНаселение;
				Сообщить("Документ №"+ДокументОбъект.Номер+". Замена Контрагента "+ДокументОбъект.Контрагент);
			КонецЕсли; 		
		КонецЕсли; 		
		
		ДоговорЗапрос = Новый Запрос;
		ДоговорЗапрос.УстановитьПараметр("Владелец" ,ДокументОбъект.Контрагент);
		ДоговорЗапрос.УстановитьПараметр("ВидДоговора" ,Перечисления.ВидыДоговоровКонтрагентов.Прочее);
		ДоговорЗапрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
	
		ДоговорЗапрос.Текст = " ВЫБРАТЬ РАЗРЕШЕННЫЕ 
			| ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
			| ДоговорыКонтрагентов.Наименование КАК Наименование,
			| ДоговорыКонтрагентов.Владелец КАК Владелец
			| ИЗ
			| Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			| ГДЕ
			|  ДоговорыКонтрагентов.Владелец = &Владелец
			|  И ДоговорыКонтрагентов.ПометкаУдаления = &ПометкаУдаления
			|  И ДоговорыКонтрагентов.ВидДоговора.Ссылка =  &ВидДоговора";
		Договоры = ДоговорЗапрос.Выполнить();

		Если Договоры.Пустой() Тогда
			Сообщить("Нет договоров для "+ДокументОбъект.Контрагент);
		    ДокументОбъект.Контрагент = КонтрагентНаселение;
			Сообщить("Документ №"+ДокументОбъект.Номер+". Замена Контрагента "+ДокументОбъект.Контрагент);
		КонецЕсли; 

		Назначение 		= ДокументОбъект.НазначениеПлатежа;
		Контрагент 		= ДокументОбъект.Контрагент;
		Расшифровки 	= ДокументОбъект.РасшифровкаПлатежа;
		ДоговорКонтрагента = ДокументОбъект.ДоговорКонтрагента;
		ПодразделениеКт = ДокументОбъект.ПодразделениеОрганизации;
		ВидОперации 	= Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами;
		
		Для Каждого Шаблон из Шаблоны Цикл
			Если  Контрагент = Шаблон.Контрагент Тогда
				Для каждого ШаблонаНазначения Из Шаблон.НазначенияПлатежа Цикл
					Если Найти(Назначение, ШаблонаНазначения.Шаблон) > 0 Тогда 
						ДоговорКонтрагента 			=	Шаблон.Договор;
						СчетРасчетов				=   Шаблон.Счет_расчетов;
						СтатьяДДС					= 	Шаблон.СтатьяДДС;
						Перепровести = Истина;
					КонецЕсли;
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		Если Перепровести Тогда 
			Для Каждого РП из Расшифровки Цикл
				РП.СчетУчетаРасчетовСКонтрагентом 	= СчетРасчетов;
				РП.СтатьяДвиженияДенежныхСредств  	= СтатьяДДС;
				РП.СчетУчетаРасчетовПоАвансам 		= СчетПусто;
				РП.ДоговорКонтрагента 				= ДоговорКонтрагента;
			КонецЦикла;	
		КонецЕсли;
		
		Если Перепровести Тогда 
			ДокументОбъект.Комментарий = ДокументОбъект.Комментарий +"|#|"+Формат(ТекущаяДата(), "гггг ММ дд ЧЧ:мм:сс"); 
			ДокументОбъект.ВидОперации = ВидОперации;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Документ изменен №"+ДокументОбъект.Номер+". Сумма "+ДокументОбъект.СуммаДокумента+". Контрагент ="+ДокументОбъект.Контрагент+" ПодразделениеКТ.Наименование = "+ПодразделениеКТ.Наименование);
			
			Если ПодразделениеКт.Наименование = "Мурино" И ЭтоМурино(Назначение)  Тогда
				ПодразделениеКТ = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("ТУ_Всеволожский р-н",,,ВладелецВсеволожска);
				Сообщить("МУРИНО. Ручная корректировка...");
				НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
				НаборЗаписей.Прочитать(); 				
				Перепровести = Ложь;
				Если НаборЗаписей.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;				
				
				Для Каждого Запись из НаборЗаписей Цикл				
					Если Запись.ПодразделениеКт <> ПодразделениеКТ Тогда
						Перепровести = Истина;
						Запись.ПодразделениеКт =  ПодразделениеКТ;
					КонецЕсли;
				КонецЦикла;
				
				Если Перепровести Тогда
					 // установим признак обмена данными
					НаборЗаписей.ОбменДанными.Загрузка = Истина;
					НаборЗаписей.Записать();
					// предварительно установив признак обмена данными
					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					ДокументОбъект.РучнаяКорректировка   = Истина;
					ДокументОбъект.Записать(); 
				 КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		
	КонецЦикла;
	Сообщить("Обработка завершена.");
КонецПроцедуры

Функция ПоискПоШаблонам(Назначение, Шаблон)
	RegExp = Новый COMОбъект("VBScript.RegExp");
	//Поиск всех вхождений шаблона	
	RegExp.Global = Истина;	
	//Игнорировать регистр символов
	RegExp.IgnoreCase = Истина; 
	//Многострочный режим	
	RegExp.MultiLine = Ложь; 
	RegExp.Pattern = Шаблон;
	Matches = RegExp.Execute(Назначение);
	МассивЗначений = Новый Массив();
	
	Для каждого StrMatches Из Matches Цикл		
		Если ТипЗнч(StrMatches.SubMatches) = Тип("COMОбъект") Тогда
			Для каждого StrSubMatches Из StrMatches.SubMatches Цикл
				МассивЗначений.Добавить(StrSubMatches);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат   МассивЗначений;
КонецФункции

Процедура ОбработатьСписания(Организация, БанковскийСчет, ДатаНачалаПериода, ДатаОкончанияПериода)
	
	СчетПусто 	 = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	СтатьяДДС 	 = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("1-082 Транзитные платежи");
	КонтрагентНаселение = Справочники.Контрагенты.НайтиПоНаименованию("Население (платежные поручения)");
	ВладелецВсеволожска = Справочники.Организации.НайтиПоНаименованию("ТУ_Всеволожский р-н");

	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("КонецПериода" , ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
	
	Если ОбработкаПроведенных Тогда
		Запрос.УстановитьПараметр("Проведен" , Истина);
	Иначе
		Запрос.УстановитьПараметр("Проведен" , Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация" , Организация);
	Запрос.УстановитьПараметр("БанковскийСчет" , БанковскийСчет.Ссылка);
	Запрос.Текст = "
	| ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	| 	СписаниеСРасчетногоСчета.Ссылка КАК Ссылка,
	| 	СписаниеСРасчетногоСчета.Номер  КАК Номер,
	|	СписаниеСРасчетногоСчета.Контрагент КАК Контрагент,
	|	СписаниеСРасчетногоСчета.Дата КАК Дата,
	|	СписаниеСРасчетногоСчета.ДокументОснование КАК Основание,	
	|	СписаниеСРасчетногоСчета.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СписаниеСРасчетногоСчета.НазначениеПлатежа КАК НазначениеПлатежа
	| ИЗ Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	| ГДЕ
	| СписаниеСРасчетногоСчета.Дата >= &НачалоПериода
	| И СписаниеСРасчетногоСчета.Дата <= &КонецПериода
	| И СписаниеСРасчетногоСчета.ПометкаУдаления = &ПометкаУдаления
	| И СписаниеСРасчетногоСчета.СчетОрганизации.Ссылка = &БанковскийСчет
	| И СписаниеСРасчетногоСчета.Проведен = &Проведен
	| И СписаниеСРасчетногоСчета.Организация   = &Организация";
	
	Результат = Запрос.Выполнить().Выгрузить();
	// ------------------------------------------- //	
	
	Для Каждого Документ Из Результат Цикл
			Перепровести = Ложь;
			ДокументОбъект 	= Документ.Ссылка.ПолучитьОбъект();
			ДокументСсылка =  Документ.Ссылка;
			ДокументКонтрагент  = ДокументОбъект.Контрагент;

			Если Найти(ДокументОбъект.Комментарий, "@") > 0 Тогда
				Сообщить("Документ обработан ранее");
				Продолжить;
			КонецЕсли;		
			
			//---------------------------------//
			ПоляНазначения =  ПоискПоШаблонам(Документ.НазначениеПлатежа, ".*договор.*№[ ]{0,}(.*) от ([\d.]*).*умма ([\d,.]*).*");
			
			Если  ПоляНазначения.Количество()<>3 Тогда  
				ПоляНазначения =  ПоискПоШаблонам(Документ.НазначениеПлатежа, ".*дог.*№[ ]{0,}(.*) от ([\d.]*).*умма ([\d,.]*).*");
			КонецЕсли;
			
			ДопНаименованиеДоговора = "";
			Если  ПоляНазначения.Количество()<>3 Тогда  
				ПоляНазначения =  ПоискПоШаблонам(Документ.НазначениеПлатежа, ".*договор.*№[ ]{0,}(.*) от ([\d.]*).* (\(.*\))");
				Если  ПоляНазначения.Количество()<>3 Тогда  
					ПоляНазначения =  ПоискПоШаблонам(Документ.НазначениеПлатежа, ".*договор.*№[ ]{0,}(.*) от ([\d.]*).*");
				Иначе
					ДопНаименованиеДоговора = ПоляНазначения[2];
				КонецЕсли;		
			КонецЕсли;
			
			СчетРасчетов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06");
			
			Если  Найти(Документ.НазначениеПлатежа, "Возврат ошибочно перечисленных денежных средств")>0 Тогда
				ПоляНазначения.Добавить("Основной договор");
				ПоляНазначения.Добавить("Основной договор");
				ДокументОбъект.Контрагент  = КонтрагентНаселение;
				СчетРасчетов = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.09");
			КонецЕсли;
			
			Если  ПоляНазначения.Количество()<2 Тогда 
				Сообщить(Документ.Номер +". Назначение не распознано."+Документ.НазначениеПлатежа );
				Продолжить;
			КонецЕсли;
			//---------------------------------//
			
			ДоговорЗапрос = Новый Запрос();
			ДоговорЗапрос.УстановитьПараметр("Владелец" ,ДокументОбъект.Контрагент);
			ДоговорЗапрос.УстановитьПараметр("ВидДоговора" ,Перечисления.ВидыДоговоровКонтрагентов.Прочее);
			ДоговорЗапрос.УстановитьПараметр("ПометкаУдаления" , Ложь);
			
			ДоговорЗапрос.Текст = " ВЫБРАТЬ РАЗРЕШЕННЫЕ 
				| ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
				| ДоговорыКонтрагентов.Ссылка КАК Ссылка,
				| ДоговорыКонтрагентов.Наименование КАК Наименование,
				| ДоговорыКонтрагентов.Номер КАК Номер,
				| ДоговорыКонтрагентов.Владелец КАК Владелец
				| ИЗ
				| Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				| ГДЕ
				|  ДоговорыКонтрагентов.Владелец.Ссылка = &Владелец
				|  И ДоговорыКонтрагентов.ПометкаУдаления = &ПометкаУдаления
				|  И ДоговорыКонтрагентов.ВидДоговора.Ссылка =  &ВидДоговора";
			Договоры = ДоговорЗапрос.Выполнить().Выгрузить();
			ДоговорДляЗаписи = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			
			Для Каждого Договор Из Договоры Цикл
				//Сообщить("   дог. = ["+Договор.Номер +"] Вычислен ["+ПоляНазначения[0]+"]/["+ДопНаименованиеДоговора+"] Сумма ="+Строка(ДокументОбъект.СуммаДокумента));
				Если 	Договор.Номер = ПоляНазначения[0] ИЛИ 
						Договор.Номер = "№"+ПоляНазначения[0]  ИЛИ
						Договор.Номер = "№ "+ПоляНазначения[0] ИЛИ   
						СтрЗаменить(Договор.Номер," ","") = СтрЗаменить(ПоляНазначения[0]+ДопНаименованиеДоговора," ","")
				Тогда
					ДоговорДляЗаписи =  Договор.Ссылка;
					Сообщить("=> Документ №"+ДокументОбъект.Номер+". Договор определен №"+Договор.Номер);
					Перепровести = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			ДоговорИзПП = ПолучитьДоговорПоДокументу(ДокументОбъект.ДокументОснование,ДатаНачалаПериода);
			
			Если ЗначениеЗаполнено(ДоговорИзПП) Тогда
				  Сообщить("Переустановка договора из первичного документа ["+ДоговорДляЗаписи+"] =>["+ДоговорИзПП+"]");
				  ДоговорДляЗаписи = ДоговорИзПП;
				  ДокументОбъект.Контрагент = ДоговорДляЗаписи.Владелец;
				  Перепровести = Истина;
			КонецЕсли;
			
			Если Перепровести Тогда
				ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами;
				Расшифровки 	= ДокументОбъект.РасшифровкаПлатежа;
				ДанныеПереустановлены = Ложь;
				
				Для Каждого РП из Расшифровки Цикл
					РП.СчетУчетаРасчетовСКонтрагентом 	= СчетРасчетов;
					РП.СтатьяДвиженияДенежныхСредств  	= СтатьяДДС;
					РП.СчетУчетаРасчетовПоАвансам 		= СчетПусто;
					РП.ДоговорКонтрагента 				= ДоговорДляЗаписи;
					РП.СуммаПлатежа                     = ДокументОбъект.СуммаДокумента;
					РП.СуммаВзаиморасчетов              = ДокументОбъект.СуммаДокумента;					
					ДанныеПереустановлены = Истина;
				КонецЦикла;	
				
				Если Не ДанныеПереустановлены И Не ОбработкаПроведенных Тогда
					РП = ДокументОбъект.РасшифровкаПлатежа.Добавить();
					РП.СчетУчетаРасчетовСКонтрагентом 	= СчетРасчетов;
					РП.СтатьяДвиженияДенежныхСредств  	= СтатьяДДС;
					РП.СчетУчетаРасчетовПоАвансам 		= СчетПусто;
					РП.ДоговорКонтрагента 				= ДоговорДляЗаписи;
					РП.СуммаПлатежа                     = ДокументОбъект.СуммаДокумента;
					РП.СуммаВзаиморасчетов              = ДокументОбъект.СуммаДокумента;
					ДанныеПереустановлены = Истина;
				КонецЕсли;
				
				Если ДанныеПереустановлены Тогда
					ДокументОбъект.Комментарий = ДокументОбъект.Комментарий +"|@|"+Формат(ТекущаяДата(), "гггг ММ дд ЧЧ:мм:сс"); 
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
					
					Назначение 				= ДокументОбъект.НазначениеПлатежа;
					ПодразделениеДокумента 	= ДокументОбъект.ПодразделениеОрганизации;
								
					// ---------------  Обработка Всеволожского ТУ   ----------------- //
					Если ПодразделениеДокумента.Наименование = "Мурино" Тогда
						
						Если ЭтоМурино(Назначение) Тогда
							ПодразделениеДокумента = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("ТУ_Всеволожский р-н",,,ВладелецВсеволожска);
							Сообщить("Всеволожский район. Ручная корректировка...");
						КонецЕсли;
												
						НаборЗаписей = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
						НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
						НаборЗаписей.Прочитать(); 				
						Перепровести = Ложь;
						
						Если НаборЗаписей.Количество() = 0 Тогда
							Продолжить;
						КонецЕсли;				
						
						Для Каждого Запись из НаборЗаписей Цикл				
							Если Запись.ПодразделениеДт <> ПодразделениеДокумента Тогда
								Перепровести = Истина;
								Запись.ПодразделениеДт =  ПодразделениеДокумента;
							КонецЕсли;
						КонецЦикла;
						
						Если Перепровести Тогда
							 // установим признак обмена данными
							НаборЗаписей.ОбменДанными.Загрузка = Истина;
							НаборЗаписей.Записать();
							// предварительно установив признак обмена данными
							ДокументОбъект.ОбменДанными.Загрузка = Истина;
							ДокументОбъект.РучнаяКорректировка   = Истина;
							ДокументОбъект.Записать(); 
						 КонецЕсли;
					КонецЕсли;
					// ---------------  Обработка Всеволожского ТУ   ----------------- //
					
				КонецЕсли;			
			КонецЕсли;			
			
	КонецЦикла;
		
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Объект.ДатаНачалаПериода = НачалоМесяца(ТекущаяДата());
	Объект.ДатаОкончанияПериода = КонецМесяца(ТекущаяДата());	
КонецПроцедуры
